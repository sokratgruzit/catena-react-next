import React, { useState, useRef, useEffect } from 'react';

import EarnRoutes from '../components/EarnRoutes/EarnRoutes';
import Button from '../../UI/button/Button';
import CornerDecor from '../../UI/cornerDecor/CornerDecor';
import TableFilter from '../components/TableFilter/TableFilter';
import {
  ComponentViewSvg,
  ExclamationSvg,
  InfoIcon,
  MathSignSvg,
  TableViewSvg,
  VectorSvg,
} from '../../svg';

import { useWindowDimension } from '../../../hooks/useWindowDimension';

import styles from './Pools.module.css';

let poolsData = [
  {
    coinIcon: (
      <svg
        width='41'
        height='41'
        viewBox='0 0 41 41'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          d='M39.8164 20.2122C39.8164 30.9817 31.086 39.7122 20.3164 39.7122C9.54685 39.7122 0.816406 30.9817 0.816406 20.2122C0.816406 9.44261 9.54685 0.712158 20.3164 0.712158C31.086 0.712158 39.8164 9.44261 39.8164 20.2122Z'
          fill='#131313'
          stroke='white'
        />
        <path
          fillRule='evenodd'
          clipRule='evenodd'
          d='M11.5937 13.6219C12.6751 12.1937 14.092 11.0527 15.7194 10.2995C17.3468 9.54622 19.1348 9.20378 20.9261 9.3023C22.7174 9.40082 24.4569 9.93729 25.9914 10.8645C27.526 11.7916 28.8086 13.0811 29.7262 14.6192L30.5188 14.1799L31.8397 13.4066C30.6546 11.4172 28.9715 9.76945 26.9556 8.62505C24.9396 7.48064 22.6601 6.87891 20.3407 6.87891C18.0213 6.87891 15.7418 7.48064 13.7258 8.62505C11.7098 9.76945 10.0267 11.4172 8.84163 13.4066L8.18555 14.4347L9.23352 15.0542L13.2889 17.4575C12.6256 19.122 12.5794 20.9682 13.1587 22.6637C13.738 24.3592 14.9047 25.7928 16.4488 26.7065C17.993 27.6201 19.8133 27.9539 21.5822 27.6478C23.351 27.3416 24.9523 26.4156 26.0979 25.0364L29.0525 26.7938C27.9707 28.2233 26.553 29.3651 24.9244 30.1185C23.2958 30.8719 21.5063 31.2138 19.714 31.1139C17.9216 31.014 16.1815 30.4755 14.647 29.5459C13.1126 28.6162 11.8311 27.324 10.9156 25.7833L8.82402 27.0179C10.0091 29.0073 11.6922 30.655 13.7082 31.7994C15.7241 32.9438 18.0037 33.5456 20.3231 33.5456C22.6425 33.5456 24.922 32.9438 26.938 31.7994C28.9539 30.655 30.637 29.0073 31.8221 27.0179L32.4474 25.9722L31.3994 25.3527L28.0706 23.38L25.1997 21.728C24.8502 22.8381 24.1305 23.7955 23.1603 24.441C22.19 25.0865 21.0276 25.3813 19.8662 25.2764C18.7048 25.1715 17.6144 24.6732 16.7761 23.8644C15.9378 23.0555 15.4021 21.9848 15.258 20.8301C15.114 19.6755 15.3703 18.5064 15.9843 17.5172C16.5983 16.5279 17.533 15.7781 18.6332 15.3923C19.7334 15.0065 20.9327 15.008 22.032 15.3965C23.1312 15.785 24.0641 16.537 24.6757 17.5278L26.7848 16.3151C26.1652 15.2897 25.3092 14.4267 24.288 13.7979C23.2668 13.1691 22.1099 12.7926 20.9135 12.6998C19.7171 12.607 18.5157 12.8005 17.4094 13.2642C16.303 13.728 15.3236 14.4486 14.5526 15.3661L11.5937 13.6219Z'
          fill='#FF7152'
        />
      </svg>
    ),
    smallCoinIcon: (
      <svg
        className={styles.pools__tableSvg}
        width='25'
        height='25'
        viewBox='0 0 25 25'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <circle cx='12.3164' cy='12.2122' r='12' fill='#0500FF' />
        <path
          d='M14.1694 19.2121H10.5375C7.21511 19.2121 5.80273 17.8382 5.80273 14.6279V11.7042C5.80273 11.4372 6.0314 11.2158 6.30715 11.2158C6.5829 11.2158 6.81157 11.4372 6.81157 11.7042V14.6279C6.81157 17.2912 7.78678 18.2354 10.5375 18.2354H14.1626C16.9134 18.2354 17.8886 17.2912 17.8886 14.6279V11.7042C17.8886 11.4372 18.1173 11.2158 18.393 11.2158C18.6688 11.2158 18.8974 11.4372 18.8974 11.7042V14.6279C18.9042 17.8382 17.4851 19.2121 14.1694 19.2121Z'
          fill='white'
        />
        <path
          d='M12.3535 12.7005C11.6137 12.7005 10.9412 12.4205 10.4636 11.9061C9.98613 11.3917 9.76419 10.721 9.83817 10.0047L10.2888 5.65495C10.3157 5.40751 10.5309 5.21216 10.7932 5.21216H13.9341C14.1963 5.21216 14.4116 5.401 14.4385 5.65495L14.8891 10.0047C14.9631 10.721 14.7411 11.3917 14.2636 11.9061C13.7659 12.4205 13.0934 12.7005 12.3535 12.7005ZM11.2438 6.1889L10.8403 10.1024C10.7932 10.5387 10.9277 10.9489 11.2102 11.2484C11.7819 11.8605 12.9252 11.8605 13.4969 11.2484C13.7794 10.9424 13.9139 10.5322 13.8668 10.1024L13.4633 6.1889H11.2438Z'
          fill='white'
        />
        <path
          d='M16.5953 12.7005C15.2301 12.7005 14.0127 11.6326 13.8715 10.3173L13.4007 5.75262C13.3872 5.61588 13.4343 5.47914 13.5285 5.37495C13.6226 5.27076 13.7572 5.21216 13.9051 5.21216H15.9564C17.9337 5.21216 18.8551 6.01309 19.1309 7.97961L19.3192 9.78984C19.3999 10.5582 19.1578 11.2875 18.6399 11.841C18.1221 12.3945 17.3957 12.7005 16.5953 12.7005ZM14.4633 6.1889L14.8803 10.2196C14.9678 11.0336 15.7479 11.7238 16.5953 11.7238C17.1065 11.7238 17.5638 11.535 17.8934 11.1898C18.2162 10.8447 18.3642 10.3824 18.3171 9.88752L18.1288 8.09681C17.9203 6.62518 17.4293 6.1889 15.9564 6.1889H14.4633Z'
          fill='white'
        />
        <path
          d='M8.07502 12.7005C7.27468 12.7005 6.54832 12.3945 6.03045 11.841C5.51258 11.2875 5.27046 10.5582 5.35116 9.78984L5.53275 7.99914C5.81523 6.01309 6.73663 5.21216 8.71395 5.21216H10.7653C10.9065 5.21216 11.041 5.27076 11.1419 5.37495C11.2428 5.47914 11.2831 5.61588 11.2697 5.75262L10.7989 10.3173C10.6576 11.6326 9.44032 12.7005 8.07502 12.7005ZM8.71395 6.1889C7.24105 6.1889 6.75008 6.61867 6.53487 8.10984L6.35327 9.88752C6.29947 10.3824 6.45416 10.8447 6.77699 11.1898C7.09981 11.535 7.55715 11.7238 8.07502 11.7238C8.92245 11.7238 9.70934 11.0336 9.79005 10.2196L10.207 6.1889H8.71395Z'
          fill='white'
        />
        <path
          d='M14.0352 19.2121H10.6724C10.3966 19.2121 10.168 18.9907 10.168 18.7237V17.0958C10.168 15.7283 10.9414 14.9795 12.3538 14.9795C13.7662 14.9795 14.5396 15.7283 14.5396 17.0958V18.7237C14.5396 18.9907 14.3109 19.2121 14.0352 19.2121ZM11.1768 18.2353H13.5308V17.0958C13.5308 16.2753 13.2012 15.9562 12.3538 15.9562C11.5064 15.9562 11.1768 16.2753 11.1768 17.0958V18.2353Z'
          fill='white'
        />
      </svg>
    ),
    coinTitle: 'IFO CORE',
    coinSubTitle: 'Stake CORE to participate in IFOs',
    profitAmount: '0.0',
    profitAmountUsd: '0 USD',
    profitTitle: 'Recent CORE profit',
    creditAmount: '0.0',
    creditAmountUsd: '0.0 USD',
    creditTitle: 'IFO Credit',
    apyPercentage: '45.05%',
    apyTitle: 'APY',
    totalStaked: '$235.684.158 CORE',
    totalStakedTitle: 'Total staked',
    id: 0,
  },
  {
    coinIcon: (
      <svg
        width='41'
        height='41'
        viewBox='0 0 41 41'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          d='M39.8164 20.2122C39.8164 30.9817 31.086 39.7122 20.3164 39.7122C9.54685 39.7122 0.816406 30.9817 0.816406 20.2122C0.816406 9.44261 9.54685 0.712158 20.3164 0.712158C31.086 0.712158 39.8164 9.44261 39.8164 20.2122Z'
          fill='#131313'
          stroke='white'
        />
        <path
          fillRule='evenodd'
          clipRule='evenodd'
          d='M11.5937 13.6219C12.6751 12.1937 14.092 11.0527 15.7194 10.2995C17.3468 9.54622 19.1348 9.20378 20.9261 9.3023C22.7174 9.40082 24.4569 9.93729 25.9914 10.8645C27.526 11.7916 28.8086 13.0811 29.7262 14.6192L30.5188 14.1799L31.8397 13.4066C30.6546 11.4172 28.9715 9.76945 26.9556 8.62505C24.9396 7.48064 22.6601 6.87891 20.3407 6.87891C18.0213 6.87891 15.7418 7.48064 13.7258 8.62505C11.7098 9.76945 10.0267 11.4172 8.84163 13.4066L8.18555 14.4347L9.23352 15.0542L13.2889 17.4575C12.6256 19.122 12.5794 20.9682 13.1587 22.6637C13.738 24.3592 14.9047 25.7928 16.4488 26.7065C17.993 27.6201 19.8133 27.9539 21.5822 27.6478C23.351 27.3416 24.9523 26.4156 26.0979 25.0364L29.0525 26.7938C27.9707 28.2233 26.553 29.3651 24.9244 30.1185C23.2958 30.8719 21.5063 31.2138 19.714 31.1139C17.9216 31.014 16.1815 30.4755 14.647 29.5459C13.1126 28.6162 11.8311 27.324 10.9156 25.7833L8.82402 27.0179C10.0091 29.0073 11.6922 30.655 13.7082 31.7994C15.7241 32.9438 18.0037 33.5456 20.3231 33.5456C22.6425 33.5456 24.922 32.9438 26.938 31.7994C28.9539 30.655 30.637 29.0073 31.8221 27.0179L32.4474 25.9722L31.3994 25.3527L28.0706 23.38L25.1997 21.728C24.8502 22.8381 24.1305 23.7955 23.1603 24.441C22.19 25.0865 21.0276 25.3813 19.8662 25.2764C18.7048 25.1715 17.6144 24.6732 16.7761 23.8644C15.9378 23.0555 15.4021 21.9848 15.258 20.8301C15.114 19.6755 15.3703 18.5064 15.9843 17.5172C16.5983 16.5279 17.533 15.7781 18.6332 15.3923C19.7334 15.0065 20.9327 15.008 22.032 15.3965C23.1312 15.785 24.0641 16.537 24.6757 17.5278L26.7848 16.3151C26.1652 15.2897 25.3092 14.4267 24.288 13.7979C23.2668 13.1691 22.1099 12.7926 20.9135 12.6998C19.7171 12.607 18.5157 12.8005 17.4094 13.2642C16.303 13.728 15.3236 14.4486 14.5526 15.3661L11.5937 13.6219Z'
          fill='#FF7152'
        />
      </svg>
    ),
    smallCoinIcon: (
      <svg
        width='25'
        height='25'
        viewBox='0 0 25 25'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <circle cx='12.3164' cy='12.7124' r='12' fill='#0500FF' />
        <path
          d='M19.3164 12.7124C19.3164 16.5764 16.1804 19.7124 12.3164 19.7124C8.45241 19.7124 6.09341 15.8204 6.09341 15.8204M6.09341 15.8204H9.25741M6.09341 15.8204V19.3204M5.31641 12.7124C5.31641 8.8484 8.42441 5.7124 12.3164 5.7124C16.9854 5.7124 19.3164 9.6044 19.3164 9.6044M19.3164 9.6044V6.1044M19.3164 9.6044H16.2084'
          stroke='white'
          strokeLinecap='round'
          strokeLinejoin='round'
        />
      </svg>
    ),
    coinTitle: 'Auto CORE',
    coinSubTitle: 'Automatic restaking',
    profitAmount: '0.0',
    profitAmountUsd: '0 USD',
    profitTitle: 'Recent CORE profit',
    creditAmount: '0.0',
    creditAmountUsd: '0.0 USD',
    creditTitle: 'CORE Staked',
    apyPercentage: '60.16%',
    apyTitle: 'APY',
    totalStaked: '$135.003.032 CORE',
    totalStakedTitle: 'Total staked',
    id: 1,
  },
  {
    coinIcon: (
      <svg
        width='41'
        height='41'
        viewBox='0 0 41 41'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          d='M39.8164 20.2122C39.8164 30.9817 31.086 39.7122 20.3164 39.7122C9.54685 39.7122 0.816406 30.9817 0.816406 20.2122C0.816406 9.44261 9.54685 0.712158 20.3164 0.712158C31.086 0.712158 39.8164 9.44261 39.8164 20.2122Z'
          fill='#131313'
          stroke='white'
        />
        <path
          fillRule='evenodd'
          clipRule='evenodd'
          d='M11.5937 13.6219C12.6751 12.1937 14.092 11.0527 15.7194 10.2995C17.3468 9.54622 19.1348 9.20378 20.9261 9.3023C22.7174 9.40082 24.4569 9.93729 25.9914 10.8645C27.526 11.7916 28.8086 13.0811 29.7262 14.6192L30.5188 14.1799L31.8397 13.4066C30.6546 11.4172 28.9715 9.76945 26.9556 8.62505C24.9396 7.48064 22.6601 6.87891 20.3407 6.87891C18.0213 6.87891 15.7418 7.48064 13.7258 8.62505C11.7098 9.76945 10.0267 11.4172 8.84163 13.4066L8.18555 14.4347L9.23352 15.0542L13.2889 17.4575C12.6256 19.122 12.5794 20.9682 13.1587 22.6637C13.738 24.3592 14.9047 25.7928 16.4488 26.7065C17.993 27.6201 19.8133 27.9539 21.5822 27.6478C23.351 27.3416 24.9523 26.4156 26.0979 25.0364L29.0525 26.7938C27.9707 28.2233 26.553 29.3651 24.9244 30.1185C23.2958 30.8719 21.5063 31.2138 19.714 31.1139C17.9216 31.014 16.1815 30.4755 14.647 29.5459C13.1126 28.6162 11.8311 27.324 10.9156 25.7833L8.82402 27.0179C10.0091 29.0073 11.6922 30.655 13.7082 31.7994C15.7241 32.9438 18.0037 33.5456 20.3231 33.5456C22.6425 33.5456 24.922 32.9438 26.938 31.7994C28.9539 30.655 30.637 29.0073 31.8221 27.0179L32.4474 25.9722L31.3994 25.3527L28.0706 23.38L25.1997 21.728C24.8502 22.8381 24.1305 23.7955 23.1603 24.441C22.19 25.0865 21.0276 25.3813 19.8662 25.2764C18.7048 25.1715 17.6144 24.6732 16.7761 23.8644C15.9378 23.0555 15.4021 21.9848 15.258 20.8301C15.114 19.6755 15.3703 18.5064 15.9843 17.5172C16.5983 16.5279 17.533 15.7781 18.6332 15.3923C19.7334 15.0065 20.9327 15.008 22.032 15.3965C23.1312 15.785 24.0641 16.537 24.6757 17.5278L26.7848 16.3151C26.1652 15.2897 25.3092 14.4267 24.288 13.7979C23.2668 13.1691 22.1099 12.7926 20.9135 12.6998C19.7171 12.607 18.5157 12.8005 17.4094 13.2642C16.303 13.728 15.3236 14.4486 14.5526 15.3661L11.5937 13.6219Z'
          fill='#FF7152'
        />
      </svg>
    ),
    smallCoinIcon: (
      <svg
        width='25'
        height='25'
        viewBox='0 0 25 25'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          d='M23.8164 12.2124C23.8164 18.5637 18.6677 23.7124 12.3164 23.7124C5.96513 23.7124 0.816406 18.5637 0.816406 12.2124C0.816406 5.86113 5.96513 0.712402 12.3164 0.712402C18.6677 0.712402 23.8164 5.86113 23.8164 12.2124Z'
          fill='#131313'
          stroke='white'
        />
        <path
          fillRule='evenodd'
          clipRule='evenodd'
          d='M7.08197 8.25819C7.73087 7.40128 8.58096 6.7167 9.55741 6.26474C10.5339 5.81279 11.6067 5.60732 12.6814 5.66644C13.7562 5.72555 14.7999 6.04743 15.7206 6.60374C16.6414 7.16004 17.4109 7.93371 17.9615 8.8566L18.437 8.59298L19.2296 8.12902C18.5186 6.93539 17.5087 5.94673 16.2991 5.26009C15.0895 4.57344 13.7218 4.2124 12.3302 4.2124C10.9386 4.2124 9.57084 4.57344 8.36126 5.26009C7.15168 5.94673 6.14181 6.93539 5.43076 8.12902L5.03711 8.74588L5.66589 9.11757L8.09912 10.5595C7.70113 11.5583 7.67342 12.666 8.02099 13.6833C8.36856 14.7006 9.06858 15.5607 9.99509 16.1089C10.9216 16.6571 12.0138 16.8574 13.0751 16.6737C14.1364 16.49 15.0972 15.9344 15.7845 15.1069L17.5573 16.1613C16.9082 17.019 16.0576 17.7041 15.0804 18.1561C14.1032 18.6082 13.0296 18.8133 11.9542 18.7534C10.8788 18.6935 9.83466 18.3704 8.91401 17.8126C7.99335 17.2548 7.22443 16.4795 6.67511 15.555L5.42019 16.2958C6.13124 17.4894 7.14111 18.4781 8.35069 19.1647C9.56027 19.8514 10.928 20.2124 12.3196 20.2124C13.7113 20.2124 15.079 19.8514 16.2886 19.1647C17.4981 18.4781 18.508 17.4894 19.2191 16.2958L19.5942 15.6684L18.9654 15.2967L16.9681 14.1131L15.2456 13.1219C15.0359 13.7879 14.6041 14.3623 14.0219 14.7496C13.4398 15.1369 12.7424 15.3138 12.0455 15.2509C11.3487 15.188 10.6944 14.889 10.1914 14.4037C9.68845 13.9184 9.36703 13.2759 9.28061 12.5831C9.19418 11.8903 9.34794 11.1889 9.71634 10.5954C10.0847 10.0018 10.6456 9.55193 11.3057 9.32046C11.9658 9.08899 12.6854 9.08987 13.345 9.32295C14.0045 9.55603 14.5642 10.0073 14.9312 10.6017L16.1967 9.87415C15.8249 9.2589 15.3113 8.7411 14.6986 8.3638C14.0858 7.98651 13.3917 7.76062 12.6739 7.70493C11.956 7.64924 11.2352 7.76535 10.5714 8.04361C9.90761 8.32186 9.31997 8.75422 8.85736 9.30474L7.08197 8.25819Z'
          fill='#FF7152'
        />
      </svg>
    ),
    coinTitle: 'Manual CORE',
    coinSubTitle: 'Earn CORE stake CORE',
    profitAmount: '0.0',
    profitAmountUsd: '0 USD',
    profitTitle: 'CORE Earned',
    creditAmount: '0.0',
    creditAmountUsd: '0.0 USD',
    creditTitle: 'CORE Staked',
    apyPercentage: '48.5%',
    apyTitle: 'APY',
    totalStaked: '$56.263.697 CORE',
    totalStakedTitle: 'Total staked',
    id: 2,
  },
  {
    coinIcon: (
      <svg
        width='41'
        height='41'
        viewBox='0 0 41 41'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <g clipPath='url(#clip0_2_5539)'>
          <path
            d='M39.8164 20.7124C39.8164 31.482 31.086 40.2124 20.3164 40.2124C9.54685 40.2124 0.816406 31.482 0.816406 20.7124C0.816406 9.94285 9.54685 1.2124 20.3164 1.2124C31.086 1.2124 39.8164 9.94285 39.8164 20.7124Z'
            fill='#F0B90B'
            stroke='white'
          />
          <path
            d='M13.1908 11.5064L20.2358 7.40552L27.2808 11.5064L24.6908 13.0213L20.2358 10.4354L15.7809 13.0213L13.1908 11.5064ZM27.2808 16.6781L24.6908 15.1631L20.2358 17.749L15.7809 15.1631L13.1908 16.6781V19.708L17.6457 22.2939V27.4656L20.2358 28.9806L22.8259 27.4656V22.2939L27.2808 19.708V16.6781ZM27.2808 24.8797V21.8499L24.6908 23.3648V26.3947L27.2808 24.8797ZM29.1198 25.9506L24.6649 28.5365V31.5664L31.7099 27.4656V19.264L29.1198 20.7789V25.9506ZM26.5298 14.0922L29.1198 15.6072V18.6371L31.7099 17.1221V14.0922L29.1198 12.5773L26.5298 14.0922ZM17.6457 29.6336V32.6635L20.2358 34.1784L22.8259 32.6635V29.6336L20.2358 31.1485L17.6457 29.6336ZM13.1908 24.8797L15.7809 26.3947V23.3648L13.1908 21.8499V24.8797ZM17.6457 14.0922L20.2358 15.6072L22.8259 14.0922L20.2358 12.5773L17.6457 14.0922ZM11.3518 15.6072L13.9419 14.0922L11.3518 12.5773L8.76172 14.0922V17.1221L11.3518 18.6371V15.6072ZM11.3518 20.7789L8.76172 19.264V27.4656L15.8068 31.5664V28.5365L11.3518 25.9506V20.7789Z'
            fill='white'
          />
        </g>
        <defs>
          <clipPath id='clip0_2_5539'>
            <rect
              width='40'
              height='40'
              fill='white'
              transform='translate(0.316406 0.712402)'
            />
          </clipPath>
        </defs>
      </svg>
    ),
    smallCoinIcon: (
      <svg
        width='25'
        height='25'
        viewBox='0 0 25 25'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          d='M23.8164 12.7124C23.8164 19.0637 18.6677 24.2124 12.3164 24.2124C5.96513 24.2124 0.816406 19.0637 0.816406 12.7124C0.816406 6.36113 5.96513 1.2124 12.3164 1.2124C18.6677 1.2124 23.8164 6.36113 23.8164 12.7124Z'
          fill='#131313'
          stroke='white'
        />
        <path
          fillRule='evenodd'
          clipRule='evenodd'
          d='M7.08197 8.75819C7.73087 7.90128 8.58096 7.2167 9.55741 6.76474C10.5339 6.31279 11.6067 6.10732 12.6814 6.16644C13.7562 6.22555 14.7999 6.54743 15.7206 7.10374C16.6414 7.66004 17.4109 8.43371 17.9615 9.3566L18.437 9.09298L19.2296 8.62902C18.5186 7.43539 17.5087 6.44673 16.2991 5.76009C15.0895 5.07344 13.7218 4.7124 12.3302 4.7124C10.9386 4.7124 9.57084 5.07344 8.36126 5.76009C7.15168 6.44673 6.14181 7.43539 5.43076 8.62902L5.03711 9.24588L5.66589 9.61757L8.09912 11.0595C7.70113 12.0583 7.67342 13.166 8.02099 14.1833C8.36856 15.2006 9.06858 16.0607 9.99509 16.6089C10.9216 17.1571 12.0138 17.3574 13.0751 17.1737C14.1364 16.99 15.0972 16.4344 15.7845 15.6069L17.5573 16.6613C16.9082 17.519 16.0576 18.2041 15.0804 18.6561C14.1032 19.1082 13.0296 19.3133 11.9542 19.2534C10.8788 19.1935 9.83466 18.8704 8.91401 18.3126C7.99335 17.7548 7.22443 16.9795 6.67511 16.055L5.42019 16.7958C6.13124 17.9894 7.14111 18.9781 8.35069 19.6647C9.56027 20.3514 10.928 20.7124 12.3196 20.7124C13.7113 20.7124 15.079 20.3514 16.2886 19.6647C17.4981 18.9781 18.508 17.9894 19.2191 16.7958L19.5942 16.1684L18.9654 15.7967L16.9681 14.6131L15.2456 13.6219C15.0359 14.2879 14.6041 14.8623 14.0219 15.2496C13.4398 15.6369 12.7424 15.8138 12.0455 15.7509C11.3487 15.688 10.6944 15.389 10.1914 14.9037C9.68845 14.4184 9.36703 13.7759 9.28061 13.0831C9.19418 12.3903 9.34794 11.6889 9.71634 11.0954C10.0847 10.5018 10.6456 10.0519 11.3057 9.82046C11.9658 9.58899 12.6854 9.58987 13.345 9.82295C14.0045 10.056 14.5642 10.5073 14.9312 11.1017L16.1967 10.3741C15.8249 9.7589 15.3113 9.2411 14.6986 8.8638C14.0858 8.48651 13.3917 8.26062 12.6739 8.20493C11.956 8.14924 11.2352 8.26535 10.5714 8.54361C9.90761 8.82186 9.31997 9.25422 8.85736 9.80474L7.08197 8.75819Z'
          fill='#FF7152'
        />
      </svg>
    ),
    coinTitle: 'Earn HOTCROSS',
    coinSubTitle: 'Stake CORE',
    profitAmount: '0.0',
    profitAmountUsd: '0 USD',
    profitTitle: 'CORE Earned',
    creditAmount: '35.450.664 CORE',
    creditAmountUsd: '',
    creditTitle: 'Total staked',
    apyPercentage: '35.93%',
    apyTitle: 'APY',
    totalStaked: '$1.263.697 Blocks',
    totalStakedTitle: 'Ends in',
    timerIcon: (
      <svg
        width='13'
        height='15'
        viewBox='0 0 13 15'
        fill='none'
        xmlns='http://www.w3.org/2000/svg'
      >
        <path
          d='M6.52003 14.7124C3.10794 14.7124 0.333984 11.9385 0.333984 8.52638C0.333984 5.11429 3.10794 2.34033 6.52003 2.34033C9.93212 2.34033 12.7061 5.11429 12.7061 8.52638C12.7061 11.9385 9.93212 14.7124 6.52003 14.7124ZM6.52003 3.31708C3.6484 3.31708 1.31073 5.65475 1.31073 8.52638C1.31073 11.398 3.6484 13.7357 6.52003 13.7357C9.39166 13.7357 11.7293 11.398 11.7293 8.52638C11.7293 5.65475 9.39166 3.31708 6.52003 3.31708Z'
          fill='white'
        />
        <path
          d='M6.51962 8.85194C6.25265 8.85194 6.03125 8.63055 6.03125 8.36357V5.10776C6.03125 4.84078 6.25265 4.61938 6.51962 4.61938C6.7866 4.61938 7.00799 4.84078 7.00799 5.10776V8.36357C7.00799 8.63055 6.7866 8.85194 6.51962 8.85194Z'
          fill='white'
        />
        <path
          d='M8.47347 1.68915H4.5665C4.29952 1.68915 4.07812 1.46775 4.07812 1.20077C4.07812 0.933798 4.29952 0.712402 4.5665 0.712402H8.47347C8.74045 0.712402 8.96185 0.933798 8.96185 1.20077C8.96185 1.46775 8.74045 1.68915 8.47347 1.68915Z'
          fill='white'
        />
      </svg>
    ),
    id: 3,
  },
];

const FilterData = ['hot', 'apr', 'multiplier', 'earned', 'liquidity'];

const Pools = () => {
  const [width, height] = useWindowDimension();
  const [dataViewType, setDataViewType] = useState('table');
  const [search, setSearch] = useState('');
  const [filter, setFilter] = useState({
    open: false,
    selected: FilterData[0],
  });
  const selectRef = useRef();

  useEffect(() => {
    if (width < 896) setDataViewType('components');
  }, [width]);

  return (
    <div className={`container ${styles.pools__container} `}>
      <div className={styles.routesWrapper}>
        <EarnRoutes />
      </div>
      <h1 className='font_30'>
        Just stake some tokens to earn.
        <br /> High APR, low risk.
      </h1>
      <div className={styles.pools__panel}>
        <div className={styles.pools__panelInner}>
          <div>
            <p className='font_16'>Auto Cake Bounty</p>
            <ExclamationSvg className={styles.cakeBountySvg} />
          </div>
          <div className={styles.pools__flex}>
            <p className='font_20'>0.026</p>
            <p className='font_13'>~$0,07</p>
          </div>
          <div className={styles.pools__claim}>
            <Button
              title={'Claim'}
              type={'blue__border'}
              customStyles={{
                padding: '7px 0',
                width: '235px',
                fontSize: '16px',
                height: '32px',
                marginRight: '25px',
                lineHeight: '18px',
                marginTop: 'auto',
              }}
            />
            <p className='font_13'>Help</p>
            <InfoIcon />
          </div>
        </div>
      </div>
      <div className={`${styles.farms__filter}`}>
        <CornerDecor />
        <div className={styles.farms__filterInner}>
          <div className={styles.Farms__filterLeftPanel}>
            <TableViewSvg
              onClick={() =>
                setDataViewType(width > 896 ? 'table' : 'components')
              }
              className={`${dataViewType === 'components' && styles.tableView}`}
            />
            <ComponentViewSvg
              onClick={() => setDataViewType('components')}
              className={`${
                dataViewType === 'components' && styles.componentsView
              }`}
            />
            <div className={styles.farms__radioBtn}>
              <div className='radio-btn'>
                <input type='checkbox' />
                <div className='radio-btn__inner'>
                  <div className='radio-btn__icon'></div>
                </div>
                Staked only
              </div>
            </div>
            <TableFilter />
          </div>
          <div className={styles.Farms__filterRightPanel}>
            <div className={styles.filterWrapper}>
              <div
                ref={selectRef}
                className={styles.filters}
                onClick={() =>
                  setFilter(prevState => ({
                    ...prevState,
                    open: !prevState.open,
                  }))
                }
              >
                <p className={styles.filterName}>
                  {filter.selected}{' '}
                  <VectorSvg
                    className={`${styles.vectorSvg} ${
                      filter.open && styles.rotate
                    }`}
                  />
                </p>
                {filter.open && (
                  <>
                    {FilterData.map((FilterName, index) => {
                      if (FilterName === filter.selected) return false;
                      return (
                        <p
                          key={FilterName}
                          className={styles.FilterName}
                          onClick={() => {
                            setFilter({ open: 'false', selected: FilterName });
                          }}
                        >
                          {FilterName}
                        </p>
                      );
                    })}
                  </>
                )}
              </div>
            </div>
            <input
              onChange={e => setSearch(e.target.value)}
              type='search'
              className={styles.searchInput}
              placeholder='Search Farms'
            ></input>
          </div>
        </div>
      </div>
      <div className={`${styles.pools__tableContainer}`}>
        <CornerDecor />
        {poolsData
          .filter(item => {
            return search.toLowerCase() === ''
              ? item
              : item.coinTitle.toLowerCase().includes(search);
          })
          .map(item => {
            return (
              <div key={item.id} className={styles.pools__tableInner}>
                <div className={styles.farms__table}>
                  <div
                    className={`${styles.pools__tableItemRow} ${styles.pools__svgCont} `}
                  >
                    {item.coinIcon}
                    {item.smallCoinIcon}
                  </div>
                  <div
                    className={` ${styles.pools__tableItemColumn} ${styles.pools__columnItem1} `}
                  >
                    <p>{item.coinTitle}</p>
                    <p className={` font_12 ${styles.pools__tableSubText} `}>
                      {item.coinSubTitle}
                    </p>
                  </div>
                  <div
                    className={` ${styles.pools__tableItemColumn} ${styles.pools__columnItem2} `}
                  >
                    <p>{item.profitAmount}</p>
                    <p className={` font_12 ${styles.pools__usd}`}>
                      {item.profitAmountUsd}
                    </p>
                    <p className={` font_12 ${styles.pools__tableSubText} `}>
                      {item.profitTitle}
                    </p>
                  </div>
                  <div
                    className={` ${styles.pools__tableItemColumn} ${styles.pools__columnItem3} `}
                  >
                    <p>{item.creditAmount}</p>
                    <p className={` font_12 ${styles.pools__usd}`}>
                      {item.creditAmountUsd}
                    </p>
                    <p className={` font_12 ${styles.pools__tableSubText} `}>
                      {item.creditTitle}
                    </p>
                  </div>
                  <div
                    className={` ${styles.pools__rowItem0} ${styles.pools__tableItem}`}
                  >
                    <div className={`${styles.pools__tableItemRow} `}>
                      <p>{item.apyPercentage}</p>
                      <MathSignSvg />
                    </div>
                    <div
                      className={` ${styles.pools__tableItemColumn} ${styles.pools__columnItem4} `}
                    >
                      <p className={` font_12 ${styles.pools__tableSubText} `}>
                        {item.apyTitle}
                      </p>
                    </div>
                  </div>
                  <div
                    className={` ${styles.pools__tableItemColumn} ${styles.pools__columnItem5} `}
                  >
                    <p>{item.totalStaked}</p>
                    <p className={` font_12 ${styles.pools__tableSubText} `}>
                      {item.totalStakedTitle}
                    </p>
                    <div className={styles.pools__timer}>{item.timerIcon}</div>
                  </div>
                  <div className={styles.pools__arrow}>
                    <VectorSvg className={styles.VectorSvg} />
                  </div>
                </div>
              </div>
            );
          })}
      </div>
    </div>
  );
};

export default Pools;
